(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"4+dp":function(e,b,t){"use strict";t.r(b),t.d(b,"ChartAreaModule",function(){return n});var o=t("ofXK"),c=t("3HTj"),a=t("9PfN"),i=t("tyNb"),s=t("wZee"),d=t("fXoL");const r=[{path:"",component:(()=>{class e{constructor(){this.chartAreaOptions={xkey:"y",ykeys:["a","b"],labels:["Series A","Series B"],resize:!0},this.chartAreaData=[{y:"2006",a:100,b:90},{y:"2007",a:75,b:65},{y:"2008",a:50,b:40},{y:"2009",a:75,b:65},{y:"2010",a:50,b:40},{y:"2011",a:75,b:65},{y:"2012",a:100,b:90}]}ngAfterViewInit(){s.highlightAll()}}return e.\u0275fac=function(b){return new(b||e)},e.\u0275cmp=d.Eb({type:e,selectors:[["app-chart-area"]],decls:496,vars:10,consts:[["header","Demo",3,"isCollapsable","isRemovable"],["mkMorrisJs","Area",2,"height","500px","width","100%",3,"options","data"],["header","Usage",3,"isCollapsable","isRemovable"],[1,"language-html"],["header","Datas",3,"isCollapsable","isRemovable"],["header","Options",3,"isCollapsed","isRemovable"],[1,"table","table-striped","table-bordered"]],template:function(e,b){1&e&&(d.Qb(0,"mk-box",0),d.Lb(1,"div",1),d.Pb(),d.Qb(2,"mk-box",2),d.Qb(3,"pre"),d.Qb(4,"code",3),d.qc(5,'<div mkMorrisJs="Area" [options]="chartAreaOptions" [data]="chartAreaData"></div>'),d.Pb(),d.Pb(),d.Pb(),d.Qb(6,"mk-box",4),d.Qb(7,"p"),d.qc(8," This is an array of objects, containing x and y attributes as described by the "),d.Qb(9,"code"),d.qc(10,"xkey"),d.Pb(),d.qc(11," and "),d.Qb(12,"code"),d.qc(13,"ykeys"),d.Pb(),d.qc(14," options. "),d.Lb(15,"br"),d.Qb(16,"em"),d.qc(17,"Note: ordering doesn't matter here - you can supply the data in whatever order works best for you."),d.Pb(),d.Pb(),d.Qb(18,"pre"),d.Qb(19,"code",3),d.qc(20,"let chartAreaData = [\n  { y: '2006', a: 100, b: 90 },\n  { y: '2007', a: 75,  b: 65 },\n  { y: '2008', a: 50,  b: 40 },\n  { y: '2009', a: 75,  b: 65 },\n  { y: '2010', a: 50,  b: 40 },\n  { y: '2011', a: 75,  b: 65 },\n  { y: '2012', a: 100, b: 90 }\n];"),d.Pb(),d.Pb(),d.Pb(),d.Qb(21,"mk-box",5),d.Qb(22,"table",6),d.Qb(23,"tbody"),d.Qb(24,"tr"),d.Qb(25,"td"),d.Qb(26,"code"),d.qc(27,"behaveLikeLine"),d.Pb(),d.Pb(),d.Qb(28,"td"),d.qc(29,"Set to "),d.Qb(30,"code"),d.qc(31,"true"),d.Pb(),d.qc(32," to overlay the areas on top of each other instead of stacking them."),d.Pb(),d.Pb(),d.Qb(33,"tr"),d.Qb(34,"td"),d.Qb(35,"code"),d.qc(36,"xkey"),d.Pb(),d.Lb(37,"br"),d.Qb(38,"b"),d.qc(39,"required"),d.Pb(),d.Pb(),d.Qb(40,"td"),d.qc(41," A string containing the name of the attribute that contains date (X) values. "),d.Lb(42,"br"),d.qc(43," Timestamps are accepted in the form of millisecond timestamps (as returned by "),d.Qb(44,"code"),d.qc(45,"Date.getTime()"),d.Pb(),d.qc(46," or as strings in the following formats: "),d.Qb(47,"ul"),d.Qb(48,"li"),d.Qb(49,"code"),d.qc(50,"2012"),d.Pb(),d.Pb(),d.Qb(51,"li"),d.Qb(52,"code"),d.qc(53,"2012 Q1"),d.Pb(),d.Pb(),d.Qb(54,"li"),d.Qb(55,"code"),d.qc(56,"2012 W1"),d.Pb(),d.Pb(),d.Qb(57,"li"),d.Qb(58,"code"),d.qc(59,"2012-02"),d.Pb(),d.Pb(),d.Qb(60,"li"),d.Qb(61,"code"),d.qc(62,"2012-02-24"),d.Pb(),d.Pb(),d.Qb(63,"li"),d.Qb(64,"code"),d.qc(65,"2012-02-24 15:00"),d.Pb(),d.Pb(),d.Qb(66,"li"),d.Qb(67,"code"),d.qc(68,"2012-02-24 15:00:00"),d.Pb(),d.Pb(),d.Qb(69,"li"),d.Qb(70,"code"),d.qc(71,"2012-02-24 15:00:00.000"),d.Pb(),d.Pb(),d.Pb(),d.Qb(72,"em"),d.qc(73," Note: when using millisecond timestamps, it's recommended that you check out the "),d.Qb(74,"code"),d.qc(75,"dateFormat"),d.Pb(),d.qc(76," option. "),d.Pb(),d.Lb(77,"br"),d.Qb(78,"em"),d.qc(79," Note 2: date/time strings can optionally contain a "),d.Qb(80,"code"),d.qc(81,"T"),d.Pb(),d.qc(82," between the date and time parts, and/or a "),d.Qb(83,"code"),d.qc(84,"Z"),d.Pb(),d.qc(85," suffix, for compatibility with ISO-8601 dates. "),d.Pb(),d.Pb(),d.Pb(),d.Qb(86,"tr"),d.Qb(87,"td"),d.Qb(88,"code"),d.qc(89,"ykeys"),d.Pb(),d.Lb(90,"br"),d.Qb(91,"b"),d.qc(92,"required"),d.Pb(),d.Pb(),d.Qb(93,"td"),d.qc(94,"A list of strings containing names of attributes that contain Y values (one for each series of data to be plotted)."),d.Pb(),d.Pb(),d.Qb(95,"tr"),d.Qb(96,"td"),d.Qb(97,"code"),d.qc(98,"labels"),d.Pb(),d.Lb(99,"br"),d.Qb(100,"b"),d.qc(101,"required"),d.Pb(),d.Pb(),d.Qb(102,"td"),d.qc(103," A list of strings containing labels for the data series to be plotted (corresponding to the values in the "),d.Qb(104,"code"),d.qc(105,"ykeys"),d.Pb(),d.qc(106," option). "),d.Pb(),d.Pb(),d.Qb(107,"tr"),d.Qb(108,"td"),d.Qb(109,"code"),d.qc(110,"lineColors"),d.Pb(),d.Pb(),d.Qb(111,"td"),d.qc(112,"Array containing colors for the series lines/points."),d.Pb(),d.Pb(),d.Qb(113,"tr"),d.Qb(114,"td"),d.Qb(115,"code"),d.qc(116,"lineWidth"),d.Pb(),d.Pb(),d.Qb(117,"td"),d.qc(118,"Width of the series lines, in pixels."),d.Pb(),d.Pb(),d.Qb(119,"tr"),d.Qb(120,"td"),d.Qb(121,"code"),d.qc(122,"pointSize"),d.Pb(),d.Pb(),d.Qb(123,"td"),d.qc(124,"Diameter of the series points, in pixels."),d.Pb(),d.Pb(),d.Qb(125,"tr"),d.Qb(126,"td"),d.Qb(127,"code"),d.qc(128,"pointFillColors"),d.Pb(),d.Pb(),d.Qb(129,"td"),d.qc(130,"Colors for the series points. By default uses the same values as "),d.Qb(131,"code"),d.qc(132,"lineColors"),d.Pb(),d.Pb(),d.Pb(),d.Qb(133,"tr"),d.Qb(134,"td"),d.Qb(135,"code"),d.qc(136,"pointStrokeColors"),d.Pb(),d.Pb(),d.Qb(137,"td"),d.qc(138,"Colors for the outlines of the series points. (#ffffff by default)."),d.Pb(),d.Pb(),d.Qb(139,"tr"),d.Qb(140,"td"),d.Qb(141,"code"),d.qc(142,"ymax"),d.Pb(),d.Pb(),d.Qb(143,"td"),d.qc(144," Max. bound for Y-values. Alternatively, set this to "),d.Qb(145,"code"),d.qc(146,"'auto'"),d.Pb(),d.qc(147," to compute automatically, or "),d.Qb(148,"code"),d.qc(149,"'auto [num]'"),d.Pb(),d.qc(150," to automatically compute and ensure that the max y-value is "),d.Qb(151,"em"),d.qc(152,"at least"),d.Pb(),d.Qb(153,"code"),d.qc(154,"[num]"),d.Pb(),d.qc(155,". "),d.Pb(),d.Pb(),d.Qb(156,"tr"),d.Qb(157,"td"),d.Qb(158,"code"),d.qc(159,"ymin"),d.Pb(),d.Pb(),d.Qb(160,"td"),d.qc(161," Min. bound for Y-values. Alternatively, set this to "),d.Qb(162,"code"),d.qc(163,"'auto'"),d.Pb(),d.qc(164," to compute automatically, or "),d.Qb(165,"code"),d.qc(166,"'auto [num]'"),d.Pb(),d.qc(167," to automatically compute and ensure that the min y-value is "),d.Qb(168,"em"),d.qc(169,"at most"),d.Pb(),d.Qb(170,"code"),d.qc(171,"[num]"),d.Pb(),d.qc(172,". "),d.Lb(173,"br"),d.Qb(174,"em"),d.qc(175," Hint: you can use this to create graphs with false origins. "),d.Pb(),d.Pb(),d.Pb(),d.Lb(176,"tr"),d.Qb(177,"tr"),d.Qb(178,"td"),d.Qb(179,"code"),d.qc(180,"smooth"),d.Pb(),d.Pb(),d.Qb(181,"td"),d.qc(182,"Set to "),d.Qb(183,"code"),d.qc(184,"false"),d.Pb(),d.qc(185," to disable line smoothing."),d.Pb(),d.Pb(),d.Qb(186,"tr"),d.Qb(187,"td"),d.Qb(188,"code"),d.qc(189,"hideHover"),d.Pb(),d.Pb(),d.Qb(190,"td"),d.qc(191," Set to "),d.Qb(192,"code"),d.qc(193,"false"),d.Pb(),d.qc(194," to always show a hover legend. "),d.Lb(195,"br"),d.qc(196," Set to "),d.Qb(197,"code"),d.qc(198,"true"),d.Pb(),d.qc(199," or "),d.Qb(200,"code"),d.qc(201,"'auto'"),d.Pb(),d.qc(202," to only show the hover legend when the mouse cursor is over the chart. "),d.Lb(203,"br"),d.qc(204," Set to "),d.Qb(205,"code"),d.qc(206,"'always'"),d.Pb(),d.qc(207," to never show a hover legend. "),d.Pb(),d.Pb(),d.Qb(208,"tr"),d.Qb(209,"td"),d.Qb(210,"code"),d.qc(211,"hoverCallback"),d.Pb(),d.Pb(),d.Qb(212,"td"),d.qc(213," Provide a function on this option to generate custom hover legends. "),d.Lb(214,"br"),d.qc(215," The function will be called with the index of the row under the hover legend, the options object passed to the constructor as arguments, a string containing the default generated hover legend content HTML, and an object containing the original data for the row as passed in the "),d.Qb(216,"code"),d.qc(217,"data"),d.Pb(),d.qc(218," option. "),d.Lb(219,"br"),d.Qb(220,"em"),d.qc(221,"eg:"),d.Pb(),d.Qb(222,"pre"),d.qc(223,'hoverCallback: function (index, options, content, row) {\nreturn "sin(" + row.x + ") = " + row.y;\n}'),d.Pb(),d.Pb(),d.Pb(),d.Qb(224,"tr"),d.Qb(225,"td"),d.Qb(226,"code"),d.qc(227,"parseTime"),d.Pb(),d.Pb(),d.Qb(228,"td"),d.qc(229,"Set to "),d.Qb(230,"code"),d.qc(231,"false"),d.Pb(),d.qc(232," to skip time/date parsing for X values, instead treating them as an equally-spaced series."),d.Pb(),d.Pb(),d.Qb(233,"tr"),d.Qb(234,"td"),d.Qb(235,"code"),d.qc(236,"units"),d.Pb(),d.Pb(),d.Qb(237,"td"),d.Qb(238,"em"),d.qc(239," Deprecated. Please use "),d.Qb(240,"code"),d.qc(241,"postUnits"),d.Pb(),d.qc(242,". "),d.Pb(),d.Pb(),d.Pb(),d.Qb(243,"tr"),d.Qb(244,"td"),d.Qb(245,"code"),d.qc(246,"postUnits"),d.Pb(),d.Pb(),d.Qb(247,"td"),d.qc(248,"Set to a string value (eg: "),d.Qb(249,"code"),d.qc(250,"'%'"),d.Pb(),d.qc(251,") to add a label suffix all y-labels."),d.Pb(),d.Pb(),d.Qb(252,"tr"),d.Qb(253,"td"),d.Qb(254,"code"),d.qc(255,"preUnits"),d.Pb(),d.Pb(),d.Qb(256,"td"),d.qc(257,"Set to a string value (eg: "),d.Qb(258,"code"),d.qc(259,"'$'"),d.Pb(),d.qc(260,") to add a label prefix all y-labels."),d.Pb(),d.Pb(),d.Qb(261,"tr"),d.Qb(262,"td"),d.Qb(263,"code"),d.qc(264,"dateFormat"),d.Pb(),d.Pb(),d.Qb(265,"td"),d.qc(266," A function that accepts millisecond timestamps and formats them for display as chart labels. "),d.Lb(267,"br"),d.qc(268," default: "),d.Qb(269,"code"),d.qc(270,"function (x) { return new Date(x).toString(); }"),d.Pb(),d.Pb(),d.Pb(),d.Qb(271,"tr"),d.Qb(272,"td"),d.Qb(273,"code"),d.qc(274,"xLabels"),d.Pb(),d.Pb(),d.Qb(275,"td"),d.qc(276," Sets the x axis labelling interval. By default the interval will be automatically computed. The following are valid interval strings: "),d.Qb(277,"ul"),d.Qb(278,"li"),d.Qb(279,"code"),d.qc(280,'"decade"'),d.Pb(),d.Pb(),d.Qb(281,"li"),d.Qb(282,"code"),d.qc(283,'"year"'),d.Pb(),d.Pb(),d.Qb(284,"li"),d.Qb(285,"code"),d.qc(286,'"month"'),d.Pb(),d.Pb(),d.Qb(287,"li"),d.Qb(288,"code"),d.qc(289,'"week"'),d.Pb(),d.Pb(),d.Qb(290,"li"),d.Qb(291,"code"),d.qc(292,'"day"'),d.Pb(),d.Pb(),d.Qb(293,"li"),d.Qb(294,"code"),d.qc(295,'"hour"'),d.Pb(),d.Pb(),d.Qb(296,"li"),d.Qb(297,"code"),d.qc(298,'"30min"'),d.Pb(),d.Pb(),d.Qb(299,"li"),d.Qb(300,"code"),d.qc(301,'"15min"'),d.Pb(),d.Pb(),d.Qb(302,"li"),d.Qb(303,"code"),d.qc(304,'"10min"'),d.Pb(),d.Pb(),d.Qb(305,"li"),d.Qb(306,"code"),d.qc(307,'"5min"'),d.Pb(),d.Pb(),d.Qb(308,"li"),d.Qb(309,"code"),d.qc(310,'"minute"'),d.Pb(),d.Pb(),d.Qb(311,"li"),d.Qb(312,"code"),d.qc(313,'"30sec"'),d.Pb(),d.Pb(),d.Qb(314,"li"),d.Qb(315,"code"),d.qc(316,'"15sec"'),d.Pb(),d.Pb(),d.Qb(317,"li"),d.Qb(318,"code"),d.qc(319,'"10sec"'),d.Pb(),d.Pb(),d.Qb(320,"li"),d.Qb(321,"code"),d.qc(322,'"5sec"'),d.Pb(),d.Pb(),d.Qb(323,"li"),d.Qb(324,"code"),d.qc(325,'"second"'),d.Pb(),d.Pb(),d.Pb(),d.Pb(),d.Pb(),d.Qb(326,"tr"),d.Qb(327,"td"),d.Qb(328,"code"),d.qc(329,"xLabelFormat"),d.Pb(),d.Pb(),d.Qb(330,"td"),d.qc(331," A function that accepts Date objects and formats them for display as x-axis labels. Overrides the default formatter chosen by the automatic labeller or the "),d.Qb(332,"code"),d.qc(333,"xLabels"),d.Pb(),d.qc(334," option. "),d.Lb(335,"br"),d.qc(336," eg: "),d.Qb(337,"code"),d.qc(338,"function (x) { return x.toString(); }"),d.Pb(),d.Pb(),d.Pb(),d.Qb(339,"tr"),d.Qb(340,"td"),d.Qb(341,"code"),d.qc(342,"xLabelAngle"),d.Pb(),d.Pb(),d.Qb(343,"td"),d.qc(344,"The angle in degrees from horizontal to draw x-axis labels."),d.Pb(),d.Pb(),d.Qb(345,"tr"),d.Qb(346,"td"),d.Qb(347,"code"),d.qc(348,"yLabelFormat"),d.Pb(),d.Pb(),d.Qb(349,"td"),d.qc(350," A function that accepts y-values and formats them for display as y-axis labels. "),d.Lb(351,"br"),d.qc(352," eg: "),d.Qb(353,"code"),d.qc(354,"function (y) { return y.toString() + 'km'; }"),d.Pb(),d.Pb(),d.Pb(),d.Qb(355,"tr"),d.Qb(356,"td"),d.Qb(357,"code"),d.qc(358,"goals"),d.Pb(),d.Pb(),d.Qb(359,"td"),d.qc(360," A list of y-values to draw as horizontal 'goal' lines on the chart. "),d.Lb(361,"br"),d.qc(362," eg: "),d.Qb(363,"code"),d.qc(364,"goals: [1.0, -1.0]"),d.Pb(),d.Pb(),d.Pb(),d.Qb(365,"tr"),d.Qb(366,"td"),d.Qb(367,"code"),d.qc(368,"goalStrokeWidth"),d.Pb(),d.Pb(),d.Qb(369,"td"),d.qc(370,"Width, in pixels, of the goal lines."),d.Pb(),d.Pb(),d.Qb(371,"tr"),d.Qb(372,"td"),d.Qb(373,"code"),d.qc(374,"goalLineColors"),d.Pb(),d.Pb(),d.Qb(375,"td"),d.qc(376," Array of color values to use for the goal line colors. If you list fewer colors here than you have lines in "),d.Qb(377,"code"),d.qc(378,"goals"),d.Pb(),d.qc(379,", then the values will be cycled. "),d.Pb(),d.Pb(),d.Qb(380,"tr"),d.Qb(381,"td"),d.Qb(382,"code"),d.qc(383,"events"),d.Pb(),d.Pb(),d.Qb(384,"td"),d.qc(385," A list of x-values to draw as vertical 'event' lines on the chart. "),d.Lb(386,"br"),d.qc(387," eg: "),d.Qb(388,"code"),d.qc(389,"events: ['2012-01-01', '2012-02-01', '2012-03-01']"),d.Pb(),d.Pb(),d.Pb(),d.Qb(390,"tr"),d.Qb(391,"td"),d.Qb(392,"code"),d.qc(393,"eventStrokeWidth"),d.Pb(),d.Pb(),d.Qb(394,"td"),d.qc(395,"Width, in pixels, of the event lines."),d.Pb(),d.Pb(),d.Qb(396,"tr"),d.Qb(397,"td"),d.Qb(398,"code"),d.qc(399,"eventLineColors"),d.Pb(),d.Pb(),d.Qb(400,"td"),d.qc(401," Array of color values to use for the event line colors. If you list fewer colors here than you have lines in "),d.Qb(402,"code"),d.qc(403,"events"),d.Pb(),d.qc(404,", then the values will be cycled. "),d.Pb(),d.Pb(),d.Qb(405,"tr"),d.Qb(406,"td"),d.Qb(407,"code"),d.qc(408,"continuousLine"),d.Pb(),d.Pb(),d.Qb(409,"td"),d.qc(410," When set to "),d.Qb(411,"code"),d.qc(412,"false"),d.Pb(),d.qc(413," (the default), all "),d.Qb(414,"code"),d.qc(415,"null"),d.Pb(),d.qc(416," and "),d.Qb(417,"code"),d.qc(418,"undefined"),d.Pb(),d.qc(419," values in a data series will be ignored and lines will be drawn spanning them. "),d.Lb(420,"br"),d.qc(421," When set to "),d.Qb(422,"code"),d.qc(423,"true"),d.Pb(),d.qc(424,", "),d.Qb(425,"code"),d.qc(426,"null"),d.Pb(),d.qc(427," values will break the line and "),d.Qb(428,"code"),d.qc(429,"undefined"),d.Pb(),d.qc(430," values will be spanned. "),d.Lb(431,"br"),d.Qb(432,"em"),d.qc(433," Note: in v0.5.0, this setting will be removed and the behaviour will be to break lines at "),d.Qb(434,"code"),d.qc(435,"null"),d.Pb(),d.qc(436," values. "),d.Pb(),d.Pb(),d.Pb(),d.Qb(437,"tr"),d.Qb(438,"td"),d.Qb(439,"code"),d.qc(440,"axes"),d.Pb(),d.Pb(),d.Qb(441,"td"),d.qc(442,"Set to "),d.Qb(443,"code"),d.qc(444,"false"),d.Pb(),d.qc(445," to disable drawing the x and y axes."),d.Pb(),d.Pb(),d.Qb(446,"tr"),d.Qb(447,"td"),d.Qb(448,"code"),d.qc(449,"grid"),d.Pb(),d.Pb(),d.Qb(450,"td"),d.qc(451,"Set to "),d.Qb(452,"code"),d.qc(453,"false"),d.Pb(),d.qc(454," to disable drawing the horizontal grid lines."),d.Pb(),d.Pb(),d.Qb(455,"tr"),d.Qb(456,"td"),d.Qb(457,"code"),d.qc(458,"gridTextColor"),d.Pb(),d.Pb(),d.Qb(459,"td"),d.qc(460,"Set the color of the axis labels (default: #888)."),d.Pb(),d.Pb(),d.Qb(461,"tr"),d.Qb(462,"td"),d.Qb(463,"code"),d.qc(464,"gridTextSize"),d.Pb(),d.Pb(),d.Qb(465,"td"),d.qc(466,"Set the point size of the axis labels (default: 12)."),d.Pb(),d.Pb(),d.Qb(467,"tr"),d.Qb(468,"td"),d.Qb(469,"code"),d.qc(470,"gridTextFamily"),d.Pb(),d.Pb(),d.Qb(471,"td"),d.qc(472,"Set the font family of the axis labels (default: sans-serif)."),d.Pb(),d.Pb(),d.Qb(473,"tr"),d.Qb(474,"td"),d.Qb(475,"code"),d.qc(476,"gridTextWeight"),d.Pb(),d.Pb(),d.Qb(477,"td"),d.qc(478,"Set the font weight of the axis labels (default: normal)."),d.Pb(),d.Pb(),d.Qb(479,"tr"),d.Qb(480,"td"),d.Qb(481,"code"),d.qc(482,"fillOpacity"),d.Pb(),d.Pb(),d.Qb(483,"td"),d.qc(484," Change the opacity of the area fill colour. Accepts values between 0.0 (for completely transparent) and 1.0 (for completely opaque). "),d.Pb(),d.Pb(),d.Qb(485,"tr"),d.Qb(486,"td"),d.Qb(487,"code"),d.qc(488,"resize"),d.Pb(),d.Pb(),d.Qb(489,"td"),d.qc(490," Set to "),d.Qb(491,"code"),d.qc(492,"true"),d.Pb(),d.qc(493," to enable automatic resizing when the containing element resizes. (default: false). "),d.Lb(494,"br"),d.qc(495," This has a significant performance impact, so is disabled by default. "),d.Pb(),d.Pb(),d.Pb(),d.Pb(),d.Pb()),2&e&&(d.cc("isCollapsable",!1)("isRemovable",!1),d.yb(1),d.cc("options",b.chartAreaOptions)("data",b.chartAreaData),d.yb(1),d.cc("isCollapsable",!1)("isRemovable",!1),d.yb(4),d.cc("isCollapsable",!0)("isRemovable",!1),d.yb(15),d.cc("isCollapsed",!0)("isRemovable",!1))},directives:[c.a,a.a],styles:[""]}),e})()}];let l=(()=>{class e{}return e.\u0275mod=d.Ib({type:e}),e.\u0275inj=d.Hb({factory:function(b){return new(b||e)},imports:[[i.i.forChild(r)],i.i]}),e})(),n=(()=>{class e{}return e.\u0275mod=d.Ib({type:e}),e.\u0275inj=d.Hb({factory:function(b){return new(b||e)},imports:[[o.b,c.b,a.d,l]]}),e})()}}]);