(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{NUWv:function(e,t,a){"use strict";a.r(t),a.d(t,"ChartDonutModule",function(){return d});var o=a("ofXK"),b=a("3HTj"),l=a("9PfN"),s=a("tyNb"),c=a("wZee"),n=a("fXoL");const i=[{path:"",component:(()=>{class e{constructor(){this.chartDonutOptions={resize:!0,toto:"roro"},this.chartDonutData=[{label:"Download Sales",value:12},{label:"In-Store Sales",value:30},{label:"Mail-Order Sales",value:20}]}ngAfterViewInit(){c.highlightAll()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Eb({type:e,selectors:[["app-chart-donut"]],decls:70,vars:10,consts:[["lteTitle","Demo",3,"isCollapsable","isRemovable"],["mkMorrisJs","Donut",2,"height","500px","width","100%",3,"options","data"],["lteTitle","Usage",3,"isCollapsable","isRemovable"],[1,"language-html"],["lteTitle","Datas",3,"isCollapsable","isRemovable"],["lteTitle","Options",3,"isCollapsable","isRemovable"],[1,"table","table-striped","table-bordered"]],template:function(e,t){1&e&&(n.Qb(0,"mk-box",0),n.Lb(1,"div",1),n.Pb(),n.Qb(2,"mk-box",2),n.Qb(3,"pre"),n.Qb(4,"code",3),n.qc(5,'<div mkMorrisJs="Donut" [options]="chartDonutOptions" [data]="chartDonutData"></div>'),n.Pb(),n.Pb(),n.Pb(),n.Qb(6,"mk-box",4),n.Qb(7,"p"),n.qc(8," This is an array of objects, containing x and y attributes as described by the "),n.Qb(9,"code"),n.qc(10,"xkey"),n.Pb(),n.qc(11," and "),n.Qb(12,"code"),n.qc(13,"ykeys"),n.Pb(),n.qc(14," options. "),n.Lb(15,"br"),n.Qb(16,"em"),n.qc(17," Note: by default, the segment with the greatest value will be initially selected. You can change the selection using the "),n.Pb(),n.Qb(18,"code"),n.qc(19,"select("),n.Qb(20,"em"),n.qc(21,"index"),n.Pb(),n.qc(22,")"),n.Pb(),n.Qb(23,"em"),n.qc(24," method on the object returned by "),n.Pb(),n.Qb(25,"code"),n.qc(26,"Morris.Donut"),n.Pb(),n.Qb(27,"em"),n.qc(28,". "),n.Pb(),n.Pb(),n.Qb(29,"pre"),n.Qb(30,"code",3),n.qc(31,'let chartAreaData = [\n  {label: "Download Sales", value: 12},\n  {label: "In-Store Sales", value: 30},\n  {label: "Mail-Order Sales", value: 20}\n];'),n.Pb(),n.Pb(),n.Pb(),n.Qb(32,"mk-box",5),n.Qb(33,"table",6),n.Qb(34,"tbody"),n.Qb(35,"tr"),n.Qb(36,"td"),n.Qb(37,"code"),n.qc(38,"colors"),n.Pb(),n.Pb(),n.Qb(39,"td"),n.qc(40," An array of strings containing HTML-style hex colors for each of the donut segments. "),n.Qb(41,"em"),n.qc(42," Note: if there are fewer colors than segments, the colors will cycle back to the start of the array when exhausted. "),n.Pb(),n.Pb(),n.Pb(),n.Qb(43,"tr"),n.Qb(44,"td"),n.Qb(45,"code"),n.qc(46,"formatter"),n.Pb(),n.Pb(),n.Qb(47,"td"),n.qc(48," A function that will translate a y-value into a label for the centre of the donut. "),n.Lb(49,"br"),n.qc(50," eg: currency "),n.Qb(51,"code"),n.qc(52,"function (y, "),n.Qb(53,"em"),n.qc(54,"data"),n.Pb(),n.qc(55,") { return '$' + y }"),n.Pb(),n.Lb(56,"br"),n.Qb(57,"em"),n.qc(58," Note: if required, the method is also passed an optional second argument, which is the complete data row for the given value. "),n.Pb(),n.Pb(),n.Pb(),n.Qb(59,"tr"),n.Qb(60,"td"),n.Qb(61,"code"),n.qc(62,"resize"),n.Pb(),n.Pb(),n.Qb(63,"td"),n.qc(64," Set to "),n.Qb(65,"code"),n.qc(66,"true"),n.Pb(),n.qc(67," to enable automatic resizing when the containing element resizes. (default: false). "),n.Lb(68,"br"),n.qc(69," This has a significant performance impact, so is disabled by default. "),n.Pb(),n.Pb(),n.Pb(),n.Pb(),n.Pb()),2&e&&(n.cc("isCollapsable",!1)("isRemovable",!1),n.yb(1),n.cc("options",t.chartDonutOptions)("data",t.chartDonutData),n.yb(1),n.cc("isCollapsable",!1)("isRemovable",!1),n.yb(4),n.cc("isCollapsable",!0)("isRemovable",!1),n.yb(26),n.cc("isCollapsable",!0)("isRemovable",!1))},directives:[b.a,l.c],styles:[""]}),e})()}];let r=(()=>{class e{}return e.\u0275mod=n.Ib({type:e}),e.\u0275inj=n.Hb({factory:function(t){return new(t||e)},imports:[[s.i.forChild(i)],s.i]}),e})(),d=(()=>{class e{}return e.\u0275mod=n.Ib({type:e}),e.\u0275inj=n.Hb({factory:function(t){return new(t||e)},imports:[[o.b,r,b.b,l.d]]}),e})()}}]);